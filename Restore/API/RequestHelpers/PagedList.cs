
using System.Net.WebSockets;
using Microsoft.EntityFrameworkCore;

namespace API.RequestHelpers
{
    //Create this class to extend the .NET List class to add metadata info along with items in list
    public class PagedList<T> : List<T>
    {
        public PagedList(List<T> items, int count, int pageNum, int pageSize) 
        {
            MetaData = new MetaData{
                PageSize = pageSize, //no. of items on each page
                CurrentPage = pageNum, //current page
                TotalCount = count, //no. of products generated by query
                TotalPages = (int)Math.Ceiling(count / (double)pageSize) //pages required to display all products
            };
            AddRange(items);
        }



        public MetaData MetaData { get; set; }

        public static async Task<PagedList<T>> ToPagedList(IQueryable<T> query,
            int pageNumber, int pageSize)
        {
            var count = await query.CountAsync(); //number of items after sorting, searching, filltering, etc.

            var itemsForCurrentPage = await query.Skip((pageNumber-1)*pageSize).Take(pageSize).ToListAsync();
            /*
                If we are on page 1
                Skip 0 records
                Take X records

                If we are on page 2
                Skip X records (as they belong to page 1)
                Take X records (items for page 2)
            */

            return new PagedList<T>(itemsForCurrentPage, count, pageNumber, pageSize);
        }
        
    }
}